import { useState } from 'react';
import Head from 'next/head';
import Link from 'next/link';
import { useRouter } from 'next/router';
import Navbar from '../components/Navbar';
import Footer from '../components/Footer';

interface TestSet {
  id: number;
  title: string;
  description: string;
  difficulty: 'Beginner' | 'Intermediate' | 'Advanced' | 'Expert' | 'Master';
  color: string;
  icon: string;
}

const testSets: TestSet[] = [
  {
    id: 1,
    title: 'Basic Alphabet Set',
    description: 'Test your knowledge of fundamental ISL alphabet signs. Perfect for beginners.',
    difficulty: 'Beginner',
    color: 'classic-primary-bg',
    icon: 'ðŸŒ±'
  },
  {
    id: 2,
    title: 'Intermediate Challenge',
    description: 'More complex sign combinations and letter variations to challenge your skills.',
    difficulty: 'Intermediate',
    color: 'classic-primary-bg',
    icon: 'ðŸŒŠ'
  },
  {
    id: 3,
    title: 'Advanced Mastery',
    description: 'Advanced sign language concepts with tricky similar-looking letters.',
    difficulty: 'Advanced',
    color: 'classic-primary-bg',
    icon: 'ðŸŽ¯'
  },
  {
    id: 4,
    title: 'Expert Level',
    description: 'Expert-level questions focusing on subtle differences and advanced techniques.',
    difficulty: 'Expert',
    color: 'classic-primary-bg',
    icon: 'ðŸ”¥'
  },
  {
    id: 5,
    title: 'Master Challenge',
    description: 'The ultimate test for ISL alphabet mastery. Only true experts can ace this!',
    difficulty: 'Master',
    color: 'classic-primary-bg',
    icon: 'ðŸ‘‘'
  }
];

export default function TestSets() {
  const router = useRouter();
  const [selectedSet, setSelectedSet] = useState<number | null>(null);
  const [loading, setLoading] = useState(false);

  const handleStartTest = async (setId: number) => {
    setLoading(true);
    setSelectedSet(setId);

    try {
      // Navigate to the exam page with the selected set
      router.push(`/exam/${setId}`);
    } catch (error) {
      console.error('Error starting test:', error);
      setLoading(false);
      setSelectedSet(null);
    }
  };

  return (
    <>
      <Head>
        <title>Test Sets - ISL Learning Platform</title>
        <meta name="description" content="Choose from 5 AI-generated test sets to challenge your Indian Sign Language alphabet knowledge" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="min-h-screen classic-bg">
        <Navbar />

        {/* Header Section */}
        <section className="classic-bg-paper relative border-b-4 border-gray-800">
          <div className="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8 py-20">
            <div className="text-center">
              <div className="inline-block p-4 bg-white border-4 border-gray-800 mb-8 old-school-card">
                <svg className="w-12 h-12 text-gray-800" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={3} d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                </svg>
              </div>
              <h1 className="text-5xl md:text-6xl font-bold classic-title mb-6 uppercase">
                Choose Your Challenge
              </h1>
              <div className="w-32 h-2 bg-gray-800 mx-auto mb-8"></div>
              <div className="max-w-4xl mx-auto border-l-4 border-gray-800 pl-8">
                <p className="text-xl classic-subtitle leading-relaxed italic">
                  "Select from five carefully curated examination sets, each containing five unique questions
                  generated by advanced artificial intelligence. Test your ISL alphabet knowledge through
                  our traditional assessment methodology."
                </p>
              </div>
            </div>
          </div>
        </section>

        {/* Test Sets Grid */}
        <section className="py-20 px-4 sm:px-6 lg:px-8 classic-bg-dark">
          <div className="max-w-6xl mx-auto">
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
              {testSets.map((set) => (
                <div
                  key={set.id}
                  className="old-school-card bg-white overflow-hidden flex flex-col h-full"
                >
                  {/* Set Header */}
                  <div style={{ backgroundColor: '#8b7355' }} className="p-6 text-white relative border-b-4 border-gray-800">
                    <div className="absolute top-0 right-0 text-6xl opacity-20 transform rotate-12 translate-x-4 -translate-y-2">
                      {set.icon}
                    </div>
                    <div className="relative z-10">
                      <div className="flex items-center justify-between mb-2">
                        <span className="text-2xl">{set.icon}</span>
                        <span className="bg-white/20 px-3 py-1 border-2 border-white text-sm font-bold uppercase tracking-wide">
                          SET {set.id}
                        </span>
                      </div>
                      <h3 className="text-2xl font-bold mb-2 text-white uppercase">{set.title}</h3>
                      <div className="flex items-center space-x-2">
                        <span className="bg-white/30 px-3 py-1 border-2 border-white text-sm font-bold uppercase tracking-wide">
                          {set.difficulty}
                        </span>
                        <span className="text-sm font-bold">â€¢ 5 Questions</span>
                      </div>
                    </div>
                  </div>

                  {/* Set Content */}
                  <div className="p-6 classic-bg h-full flex flex-col">
                    <p className="classic-subtitle mb-6 leading-relaxed italic border-l-4 border-gray-800 pl-4 flex-grow">
                      {set.description}
                    </p>

                    {/* Features */}
                    <div className="space-y-3 mb-6">
                      <div className="flex items-center text-sm classic-subtitle">
                        <div className="w-4 h-4 mr-3 bg-gray-800 border-2 border-gray-600"></div>
                        AI-Generated Questions
                      </div>
                      <div className="flex items-center text-sm classic-subtitle">
                        <div className="w-4 h-4 mr-3 bg-gray-800 border-2 border-gray-600"></div>
                        Image-Based Answers
                      </div>
                      <div className="flex items-center text-sm classic-subtitle">
                        <div className="w-4 h-4 mr-3 bg-gray-800 border-2 border-gray-600"></div>
                        Instant Feedback
                      </div>
                    </div>

                    {/* Start Button */}
                    <button
                      onClick={() => handleStartTest(set.id)}
                      disabled={loading && selectedSet === set.id}
                      className="w-full btn-classic-primary disabled:opacity-50 disabled:cursor-not-allowed mt-auto"
                    >
                      {loading && selectedSet === set.id ? (
                        <div className="flex items-center justify-center">
                          <div className="classic-loading mr-3"></div>
                          LOADING QUESTIONS...
                        </div>
                      ) : (
                        <div className="flex items-center justify-center">
                          START EXAMINATION
                          <svg className="ml-3 w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24" strokeWidth={3}>
                            <path strokeLinecap="round" strokeLinejoin="round" d="M14.828 14.828a4 4 0 01-5.656 0M9 10h1.5a1.5 1.5 0 011.5 1.5V13a1.5 1.5 0 01-1.5 1.5H9m6 0V9a1.5 1.5 0 011.5-1.5H18a1.5 1.5 0 011.5 1.5v1.5a1.5 1.5 0 01-1.5 1.5h-1.5m-6 0H9" />
                          </svg>
                        </div>
                      )}
                    </button>
                  </div>
                </div>
              ))}
            </div>

            {/* Back to Learn Button */}
            <div className="text-center mt-12">
              <Link
                href="/learn"
                className="btn-classic-secondary inline-flex items-center"
              >
                <svg className="w-5 h-5 mr-3" fill="none" stroke="currentColor" viewBox="0 0 24 24" strokeWidth={3}>
                  <path strokeLinecap="round" strokeLinejoin="round" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
                </svg>
                BACK TO LEARNING
              </Link>
            </div>
          </div>
        </section>

        <Footer />
      </div>
    </>
  );
}
